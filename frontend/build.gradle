plugins {
    id "base"
    id "idea"
    id "com.moowork.node" version "0.13"
}

node {
    version = '8.11.4'
    workDir = file("${project.buildDir}/nodejs")
    download = true
}

String yarnVersion = "1.9.4"

// This manual setup is not necessary once https://github.com/srs/gradle-node-plugin/issues/175 is fixed
task yarnSetup(dependsOn: nodeSetup) {
    File yarnDir = file(".gradle/yarn")

    group = 'node'
    description = "Install yarn into .gradle/yarn"
    inputs.property("yarnVersion", yarnVersion)
    outputs.dir yarnDir

    doLast {
        String tarFile = "yarn-v${yarnVersion}.tar.gz"
        String url = "https://yarnpkg.com/downloads/$yarnVersion/$tarFile"

        yarnDir.deleteDir()
        yarnDir.mkdirs()

        logger.debug( "Downloading yarn from ${url}" )

        ant.get( src: url, dest: yarnDir, skipexisting: true )

        copy {
            from tarTree(new File(yarnDir, tarFile))
            into yarnDir
        }
    }
}

task yarnInstall(type: NodeTask, dependsOn: yarnSetup) {
    group 'node'
    description 'Install node packages from package.json using yarn.'

    inputs.file 'package.json'
    inputs.file 'yarn.lock'
    outputs.dir 'node_modules'
    script = file(".gradle/yarn/yarn-v${yarnVersion}/bin/yarn.js")
    args = ['install', '--pure-lockfile']
}

task installDependencies(dependsOn: yarnInstall) {
  description = 'Install all frontend dependencies'
}

task buildProduction(type: NpmTask) {
    dependsOn installDependencies

    inputs.dir 'src'
    inputs.files 'package.json', 'yarn.lock', 'angular-cli.json'
    outputs.dir 'dist'

    args = ['run-script', 'buildProduction']
}

task test(type: NpmTask) {
  dependsOn installDependencies
  args = ['run-script', 'e2e']
}

task serve(type: NpmTask) {
  dependsOn installDependencies
  args = ['run-script', 'start']
}

task deleteNodeModules(type: Delete) {
    delete 'node_modules'
}

task frontendJar(type: Jar, dependsOn: buildProduction) {
    baseName "rhp-frontend"
    from "dist"
    eachFile { details ->
        details.path = "static/${details.path}"
    }
    // Jar contains duplicate empty folders, see Gradle issue:
    // http://issues.gradle.org/browse/GRADLE-1830
    // so we need to set includeEmptyDirs to false
    includeEmptyDirs = false
}

artifacts {
    archives frontendJar
}
